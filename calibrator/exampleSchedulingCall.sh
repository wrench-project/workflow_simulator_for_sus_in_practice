#Call the simulator using a calibration to generate a recommended schedule
./simulator.py schedule -p workflow_simulator -t template.json -m makespan -tss most_flops least_flops most_data least_data highest_bottom_level lowest_bottom_level most_children least_children -wss fastest_cores least_idle_cores most_idle_cpu_resources slowest_cores most_idle_cores most_idle_cores -nss one_core -s '{"workflow":{"file":"../data/forkjoin.json"}}' -c '{"platform":{"wms":{"disk_read_bandwidth":"100MBps","disk_write_bandwidth":"100MBps","network_bandwidth":"10Gbps"},"workers":{"worker1":{"speed":"1Gf","network_bandwidth":"10Gbps"},"worker2":{"speed":"1Gf","network_bandwidth":"10Gbps"}}},"scheduling":{"task_scheduling_overhead":1,"task_ready_delay": 0}}' -v